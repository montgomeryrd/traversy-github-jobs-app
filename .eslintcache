[{"C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\index.js":"1","C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\App.js":"2","C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\reportWebVitals.js":"3","C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\utils\\useFetchJobs.js":"4","C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\components\\Jobs.js":"5","C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\components\\JobsPagination.js":"6"},{"size":478,"mtime":1608785430040,"results":"7","hashOfConfig":"8"},{"size":815,"mtime":1608786503747,"results":"9","hashOfConfig":"8"},{"size":361,"mtime":1608668651566,"results":"10","hashOfConfig":"8"},{"size":2620,"mtime":1608786372622,"results":"11","hashOfConfig":"8"},{"size":1781,"mtime":1608785125889,"results":"12","hashOfConfig":"8"},{"size":897,"mtime":1608786774857,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"vh8wox",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\index.js",[],["29","30"],"C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\App.js",["31"],"import useFetchJobs from './utils/useFetchJobs';\nimport { Container } from 'react-bootstrap';\nimport { useState } from 'react';\n\nimport Job from './components/Jobs';\nimport JobsPagination from './components/JobsPagination';\n\nconst App = () => {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  return (\n    <Container className=\"my-4\">\n      <h1>Github Jobs</h1>\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n      { loading && <h1>loading ∙∙∙ please wait</h1> }\n      { error && <h1>error loading ∙∙∙ try refreshing</h1> }\n      { jobs.map(job => {\n        return <Job key={job.id} job={job} />      \n      })}\n    </Container>\n  );\n}\n\nexport default App;","C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\reportWebVitals.js",[],"C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\utils\\useFetchJobs.js",["32"],"import axios from 'axios';\r\nimport { useReducer, useEffect } from 'react';\r\n\r\nconst useFetchJobs = (params, page) => {\r\n\r\n    // Actions\r\n    const ACTIONS = {\r\n        MAKE_REQUEST: 'make-request',\r\n        GET_DATA: 'get-data',\r\n        ERROR: 'error',\r\n        UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n    }\r\n\r\n    // CORs proxy https://cors-anywhere.herokuapp.com/\r\n    const githubURL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\r\n\r\n    // Reducer\r\n    function reducer(state, action) {\r\n        switch(action.type) {\r\n            case ACTIONS.MAKE_REQUEST:\r\n                return { loading: true, jobs: [] };\r\n            case ACTIONS.GET_DATA:\r\n                return { ...state, loading: false, jobs: action.payload.jobs };\r\n            case ACTIONS.ERROR: \r\n                return { ...state, loading: false, error: action.payload.error, jobs: [] };\r\n            case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n                return { ...state, hasNextPage: action.payload.hasNextPage };\r\n            default:\r\n                return state;\r\n        }\r\n    }\r\n    \r\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true }); // second argument is initial state\r\n\r\n    // Dispatch\r\n    useEffect(() => {\r\n        const cancelToken1 = axios.CancelToken.source() // prevents tons of axious requests from being made whenever params change\r\n        const cancelToken2 = axios.CancelToken.source()\r\n\r\n        dispatch({ type: ACTIONS.MAKE_REQUEST });\r\n\r\n        axios.get(githubURL, {\r\n            cancelToken: cancelToken1.token,\r\n            params: {markdown: true, page: page, ...params }\r\n        }).then(res => {\r\n            dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } })\r\n        }).catch(error => {\r\n            if (axios.isCancel(error)) return; \r\n            dispatch({ type: ACTIONS.ERROR, payload: { error: error } })\r\n        })\r\n\r\n        axios.get(githubURL, {\r\n            cancelToken: cancelToken2.token,\r\n            params: {markdown: true, page: page + 1, ...params }\r\n        }).then(res => {\r\n            dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } })\r\n        }).catch(error => {\r\n            if (axios.isCancel(error)) return; \r\n            dispatch({ type: ACTIONS.ERROR, payload: { error: error } })\r\n        })\r\n\r\n        return () => {\r\n            cancelToken1.cancel(); // this return calls the .catch so there needs to be a if statement\r\n            cancelToken2.cancel();\r\n        }\r\n    }, [params, page]);\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchJobs;","C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\components\\Jobs.js",[],"C:\\Users\\Riker\\Documents\\code-monkey\\traversy-github-jobs-app\\src\\components\\JobsPagination.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":9,"column":18,"nodeType":"39","messageId":"40","endLine":9,"endColumn":27},{"ruleId":"41","severity":1,"message":"42","line":66,"column":8,"nodeType":"43","endLine":66,"endColumn":22,"suggestions":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'setParams' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ACTIONS.ERROR', 'ACTIONS.GET_DATA', 'ACTIONS.MAKE_REQUEST', and 'ACTIONS.UPDATE_HAS_NEXT_PAGE'. Either include them or remove the dependency array.","ArrayExpression",["47"],"no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [params, page, ACTIONS.MAKE_REQUEST, ACTIONS.GET_DATA, ACTIONS.ERROR, ACTIONS.UPDATE_HAS_NEXT_PAGE]",{"range":"50","text":"51"},[2548,2562],"[params, page, ACTIONS.MAKE_REQUEST, ACTIONS.GET_DATA, ACTIONS.ERROR, ACTIONS.UPDATE_HAS_NEXT_PAGE]"]